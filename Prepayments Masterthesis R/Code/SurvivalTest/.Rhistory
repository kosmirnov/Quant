install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y<-3
y<x -3
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
z<-555
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls
lsU()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
list.files
old.dir <-getwd()
create("testdir")
dir.create("testdir")
setwd()
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R""mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create(testdir3, recursive=TRUE)
dir.create("testdir3"", recursive=TRUE)
dir.create("testdir3"", recursive=TRUE)
dir.create("testdir3, recursive=TRUE)
dir.create("testdir3", recursive=TRUE)
info()
help()
?file.path
dir.create(file.path("testdir2"), recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd()
setwd("old.dir")
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
c(0.5,55,-10,6)
num_vect <-c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect >=6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse ="")
paste(my_char, collapse =" ")
my_name <- c(my_char, "Konstantin")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world", sep="")
paste("Hello", "world", sep=" ")
paste("Hello", "world!", sep=" ")
c("X", "Y", "z")
paste(1:3, c("X","Y", "Z"), sep=" ")
paste(1:3, c("X","Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="_")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x
y <- x[!is.na(x)]
y
y[y>0]
x
x[x>0]
x[!is.na(x)&x>0]
c(3,5,7)
x[c(3,5,7)]
x(i.e. x[0])
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <-c"foo","bar", "norf")
names(vect2) <-c("foo","bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<- c(4,5)
dim(my_vector)
attributes(my_vector)
View(my_vector)
my_vector
class(my_vector)
my_matrix<- my_vector
?matrix
my_matrix2<- matrix(4,5)
my_matrix2<- matrix(c(1:20),nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
my_matrix2<- matrix(c(1:20),4,5)
my_matrix3<- matrix(c(1:20),4,5)
View(my_matrix3)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patiens,my_matrix)
cbind(patients,my_matrix)
my_data <- data.frame(pateints,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
View(my_data)
colnames(my_data)<- cnames
my_data
TRUE == TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE &&c(TRUE,FALSE,FALSE)
TRUE |c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 >8 || 6!=8 && 4>3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints > 5
which(ints > 7)
any(int<0)
any(ints<0)
all(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function(x)
boring_function()
boring_function
submit()
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
help()
help()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
bye()
library("swirl")
swirl()
submit()
play()
5%7
5%%7
5/7
5%%7
7%%5
nxt()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
submit()
submit()
submit()
submit()
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){[1],c(8,4,0)})
evaluate(function(x){[1]},c(8,4,0))
play()
x<-(1,2,3)
x<-c(1,2,3)
x[1]
evaluate(function(x){x[1]},c(8,4,0))
nxt()
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){last(x)},c(8,4,0))
evaluate(function(x){length(x)},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun")
paste("Programming","is","fun!")
submit()
telegram("du","bist","ein","idiot")
submit()
submit()
submit()
submit()
submit()
mad_libs("G-Town","lazy","house")
submit()
submit()
submit()
submit()
submit()
"I" %p% "love" %p% "R!"
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappy(flags,class)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lappy(flag_shapes,range)
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique <- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
unique_vals<-lapply(unique_vals,length)
unique_vals<-sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$anmiate, flags$landmass,mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
library("swirl")
swirl()
swirl()
install_course("Data Analysis")
install_course("Data Analysis")
library(survival)
detach("package:survival", unload=TRUE)
library("survival", lib.loc="C:/Program Files/R/R-3.4.1/library")
heart
jasa
heart1
jasa1
stanford
stanford2
veteran
setwd("~/")
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/R/SurvivalTest")
Rossi
